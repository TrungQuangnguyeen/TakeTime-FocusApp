# =================================================================
# OVERLAY BLOCKING SYSTEM - LIVE TESTING SCRIPT
# =================================================================

Write-Host "=== TESTING OVERLAY BLOCKING FUNCTIONALITY ===" -ForegroundColor Cyan
Write-Host "Date: $(Get-Date)" -ForegroundColor Gray

# Function to check if app is installed
function Test-AppInstalled {
    Write-Host "`nüîç Checking if TakeTime app is installed..." -ForegroundColor Yellow
    try {
        $result = flutter devices 2>&1
        if ($result -match "emulator|device") {
            Write-Host "‚úÖ Device detected" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå No device detected" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå Error checking devices: $_" -ForegroundColor Red
        return $false
    }
}

# Function to install app
function Install-App {
    Write-Host "`nüì± Installing latest version of TakeTime app..." -ForegroundColor Yellow
    try {
        flutter install
        Write-Host "‚úÖ App installed successfully" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå Error installing app: $_" -ForegroundColor Red
        return $false
    }
}

# Function to show testing instructions
function Show-TestingInstructions {
    Write-Host "`nüìã MANUAL TESTING INSTRUCTIONS" -ForegroundColor Cyan
    Write-Host "================================" -ForegroundColor Cyan
    
    Write-Host "`n1Ô∏è‚É£ SETUP TEST APP:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Open TakeTime app on your device"
    Write-Host "   ‚Ä¢ Go to '·ª®ng d·ª•ng b·ªã ch·∫∑n' (Blocked Apps) section"
    Write-Host "   ‚Ä¢ Add a test app (Facebook, Instagram, Chrome, etc.)"
    Write-Host "   ‚Ä¢ Set time limit to 1 minute"
    Write-Host "   ‚Ä¢ Enable blocking for that app"
    
    Write-Host "`n2Ô∏è‚É£ TRIGGER TIME LIMIT:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Use the test app for more than 1 minute"
    Write-Host "   ‚Ä¢ OR manually add usage time in TakeTime settings"
    Write-Host "   ‚Ä¢ Wait for usage to exceed the limit"
    
    Write-Host "`n3Ô∏è‚É£ TEST OVERLAY BLOCKING:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Try to open the blocked app"
    Write-Host "   ‚Ä¢ EXPECTED: Full-screen overlay should appear"
    Write-Host "   ‚Ä¢ Should show Vietnamese message about time limit"
    Write-Host "   ‚Ä¢ Should have 'Tho√°t ·ª©ng d·ª•ng' button"
    
    Write-Host "`n4Ô∏è‚É£ TEST EXIT FUNCTIONALITY:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Tap the 'Tho√°t ·ª©ng d·ª•ng' button"
    Write-Host "   ‚Ä¢ EXPECTED: App should close and return to home"
    
    Write-Host "`nüîç WHAT TO LOOK FOR:" -ForegroundColor Cyan
    Write-Host "   ‚úÖ App opens briefly then overlay covers it completely"
    Write-Host "   ‚úÖ Overlay shows: '·ª®ng d·ª•ng n√†y ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng v∆∞·ª£t qu√° th·ªùi gian...'"
    Write-Host "   ‚úÖ Red 'Tho√°t ·ª©ng d·ª•ng' button is visible and clickable"
    Write-Host "   ‚úÖ Tapping button closes app and returns to home screen"
    Write-Host "   ‚úÖ Cannot access app underneath the overlay"
}

# Function to check permissions
function Check-Permissions {
    Write-Host "`nüîê PERMISSION CHECKLIST:" -ForegroundColor Cyan
    Write-Host "Please verify these permissions are granted:"
    Write-Host "   1. Accessibility Service: Settings > Accessibility > TakeTime > ON"
    Write-Host "   2. Display over apps: Settings > Apps > TakeTime > Display over other apps > Allow"
    Write-Host "   3. Usage access: Settings > Apps > Special access > Usage access > TakeTime > ON"
    
    $response = Read-Host "`nHave you verified all permissions are granted? (y/n)"
    return $response -eq 'y' -or $response -eq 'Y'
}

# Function to monitor logs (using Flutter instead of ADB)
function Start-LogMonitoring {
    Write-Host "`nüìä Starting log monitoring..." -ForegroundColor Yellow
    Write-Host "This will show overlay blocking activity in real-time" -ForegroundColor Gray
    Write-Host "Press Ctrl+C to stop monitoring" -ForegroundColor Gray
    
    try {
        flutter logs | Select-String -Pattern "(OverlayBlockingService|DEBUG BLOCK|DEBUG EVENT|Overlay|blocked_package)"
    } catch {
        Write-Host "‚ùå Error starting log monitoring: $_" -ForegroundColor Red
        Write-Host "You can test manually without log monitoring" -ForegroundColor Yellow
    }
}

# Main execution
Write-Host "`nüöÄ Starting overlay blocking test sequence..." -ForegroundColor Green

# Step 1: Check device
if (-not (Test-AppInstalled)) {
    Write-Host "‚ùå Please connect your Android device or start emulator first" -ForegroundColor Red
    exit 1
}

# Step 2: Install app
if (-not (Install-App)) {
    Write-Host "‚ùå Failed to install app. Please check for errors above." -ForegroundColor Red
    exit 1
}

# Step 3: Check permissions
if (-not (Check-Permissions)) {
    Write-Host "‚ùå Please grant all required permissions before testing" -ForegroundColor Red
    Write-Host "Refer to OVERLAY_TESTING_GUIDE.md for detailed permission setup" -ForegroundColor Yellow
    exit 1
}

# Step 4: Show testing instructions
Show-TestingInstructions

# Step 5: Start monitoring
Write-Host "`nüîÑ Ready to start testing!" -ForegroundColor Green
$startMonitoring = Read-Host "Start log monitoring? (y/n)"

if ($startMonitoring -eq 'y' -or $startMonitoring -eq 'Y') {
    Start-LogMonitoring
} else {
    Write-Host "`n‚ú® Testing setup complete!" -ForegroundColor Green
    Write-Host "Follow the manual testing instructions above" -ForegroundColor Yellow
    Write-Host "Check OVERLAY_TESTING_GUIDE.md for troubleshooting" -ForegroundColor Gray
}

Write-Host "`nüìù TROUBLESHOOTING TIPS:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ If overlay doesn't appear: Check 'Display over other apps' permission"
Write-Host "   ‚Ä¢ If app not detected: Check Accessibility Service is enabled"
Write-Host "   ‚Ä¢ If time limits not working: Verify app is in blocked list"
Write-Host "   ‚Ä¢ For detailed help: See OVERLAY_TESTING_GUIDE.md"
